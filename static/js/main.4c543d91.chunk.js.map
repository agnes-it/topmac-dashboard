{"version":3,"sources":["components/Loader.js","components/EditMessages.js","components/BanUserModal.js","components/Management.js","components/TabList.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["Loader","props","className","EditMessages","shouldWarn","setShouldWarn","React","useState","loading","setLoading","useEffect","a","fetch","config","api","getJson","then","res","json","body","Object","keys","forEach","key","field","document","querySelector","value","catch","err","getData","onSubmit","useCallback","event","persist","preventDefault","FormData","target","saveUrl","save","method","JSON","stringify","window","alert","onChange","console","log","name","id","type","placeholder","class","customStyles","content","top","left","right","bottom","marginRight","transform","groupBan","userId","groupId","reason","banUserById","data","ok","location","reload","BanUserModal","isOpen","closeModal","setReason","onRequestClose","style","shouldCloseOnOverlayClick","onClick","_","get","Trigger","productName","opened","CollapsibleTable","users","onDelete","classname","openedClassName","contentOuterClassName","trigger","triggerWhenOpen","GroupTable","filter","user","removed","map","phone_number","active","user_id","username","first_name","Management","setOpen","setData","groups","setGroups","getAllUsers","groupBy","fetchData","Fragment","TABS","Tab","setTab","tabName","toUpperCase","TabsList","activeTab","CurrentTab","onTabChange","tab","shouldChange","confirm","Header","company","title","App","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.4c543d91.chunk.js","sourcesContent":["import React from 'react';\n\nconst Loader = (props) => {\n    return (\n        <div className=\"loader\" />\n    );\n};\n\nexport default Loader;","import React from 'react';\nimport config from '../config.json';\nimport Loader from './Loader';\nimport Modal from 'react-modal';\n\nconst EditMessages = ({ shouldWarn, setShouldWarn }) => {\n    const [ loading, setLoading ] = React.useState(true);\n    \n    React.useEffect(() => {\n        async function getData() {\n            await fetch(config.api.getJson)\n                .then(res => res.json())\n                .then(\n                    ({ body }) => {\n                        Object.keys(body).forEach(key => {\n                            const field = document.querySelector(`#${key}`);\n                            if (!field) return;\n                                field.value = body[key];\n                            });\n                            \n                        }\n                        ).catch((err) => {\n                            throw(err);\n                        }\n                    );\n        }\n        getData();\n        setLoading(false);\n    }, [loading]);\n    \n    const onSubmit = React.useCallback(async (event) => {\n        event.persist();\n        event.preventDefault();\n        setShouldWarn(false);\n        let body = {};\n        new FormData(event.target).forEach((value, key) => body[key] = value);\n        const saveUrl = config.api.save;\n        await fetch(saveUrl, { method: 'POST', body: JSON.stringify(body) }).then(res => res.json());\n        window.alert(\"dados salvos com sucesso!\");\n    }, [setShouldWarn]);\n\n    if (loading) {\n        return <Loader />;\n    }\n\n    const onChange = (event) => {\n        event.persist();\n        if (!shouldWarn) setShouldWarn(true);\n        console.log(event.target);\n    };\n    \n    return (\n        <div className=\"form container has-text-left \">\n            <form\n                onChange={onChange}\n                onSubmit={onSubmit}\n                className=\"is-left\">\n                <h1 className=\"title\">Geral:</h1>\n                <div className=\"field\">\n                    <label className=\"label\">Usuários Blindados (separados por vírgula)</label>\n                    <div className=\"control\">\n                        <textarea name=\"whitelist\" id=\"whitelist\" className=\"textarea\" type=\"text\" placeholder=\"insira aqui seu text\" />\n                    </div>\n                </div>\n                <hr />\n                <h1 className=\"title\">Mensagens:</h1>\n                <div className=\"field\">\n                    <label className=\"label\">Início da autenticação</label>\n                    <div className=\"control\">\n                        <textarea name=\"start_message\" id=\"start_message\" className=\"textarea\" type=\"text\" placeholder=\"insira aqui seu text\" />\n                    </div>\n                </div>\n\n                <div className=\"field\">\n                    <label className=\"label\">Boas vindas</label>\n                    <div className=\"control\">\n                        <textarea name=\"greetings\" id=\"greetings\" className=\"textarea\" type=\"text\" placeholder=\"insira aqui seu text\" />\n                    </div>\n                </div>\n\n                <div className=\"field\">\n                    <label className=\"label\">Contato recebido</label>\n                    <div className=\"control\">\n                        <textarea name=\"received\" id=\"received\" className=\"textarea\" type=\"text\" placeholder=\"insira aqui seu text\" />\n                    </div>\n                </div>\n\n                <div className=\"field\">\n                    <label className=\"label\">Sobrescrever contato</label>\n                    <div className=\"control\">\n                        <textarea name=\"override\" id=\"override\" className=\"textarea\" type=\"text\" placeholder=\"insira aqui seu text\" />\n                    </div>\n                </div>\n\n                <div className=\"field\">\n                    <label className=\"label\">limite de tempo excedido</label>\n                    <div className=\"control\">\n                        <textarea name=\"exceeded_timeout\" id=\"exceeded_timeout\" className=\"textarea\" type=\"text\" placeholder=\"insira aqui seu text\" />\n                    </div>\n                </div>\n\n                <div className=\"field\">\n                    <label className=\"label\">número ativo</label>\n                    <div className=\"control\">\n                        <textarea name=\"active_number\" id=\"active_number\" className=\"textarea\" type=\"text\" placeholder=\"insira aqui seu text\" />\n                    </div>\n                </div>\n\n                <div className=\"field\">\n                    <label className=\"label\">número inativo</label>\n                    <div className=\"control\">\n                        <textarea name=\"inactive_number\" id=\"inactive_number\" className=\"textarea\" type=\"text\" placeholder=\"insira aqui seu text\" />\n                    </div>\n                </div>\n\n                <div className=\"field\">\n                    <label className=\"label\">fim do tempo limite</label>\n                    <div className=\"control\">\n                        <textarea name=\"end_of_timeout\" id=\"end_of_timeout\" className=\"textarea\" type=\"text\" placeholder=\"insira aqui seu text\" />\n                    </div>\n                </div>\n\n                <div className=\"field\">\n                    <label className=\"label\">botão de compartilhamento de número</label>\n                    <div className=\"control\">\n                        <textarea name=\"share_button\" id=\"share_button\" className=\"textarea\" type=\"text\" placeholder=\"insira aqui seu text\" />\n                    </div>\n                </div>\n\n                <div className=\"field\">\n                    <label className=\"label\">problemas na assinatura</label>\n                    <div className=\"control\">\n                        <textarea name=\"cancel_association\" id=\"cancel_association\" className=\"textarea\" placeholder=\"insira aqui seu text\" />\n                    </div>\n                </div>\n\n                <h1 className=\"title\">Timeouts: <small className=\"is-size-5 has-text-weight-light\">(valores em segundos)</small></h1>\n                <div className=\"field\">\n                    <label className=\"label\">tempo limite para recebimento do número</label>\n                    <div class=\"control\">\n                        <input className=\"input\" name=\"timeout_receive\" id=\"timeout_receive\" type=\"text\" placeholder=\"Text input\" />\n                    </div>\n                </div>\n\n                <div className=\"field\">\n                    <label className=\"label\">tempo limite para bloqueio de usuário</label>\n                    <div class=\"control\">\n                        <input className=\"input\" name=\"timeout_block\" id=\"timeout_block\" type=\"text\" placeholder=\"Text input\" />\n                    </div>\n                </div>\n\n                <br />\n                <br />\n\n                <button className=\"button is-link\" type=\"submit\">Salvar todas as modificações</button>\n            </form>\n        </div>\n    );\n};\n\nexport default EditMessages;","import React from 'react';\nimport Modal from 'react-modal';\nimport _ from 'lodash';\nimport { api } from '../config.json';\n\nconst customStyles = {\n    content : {\n        top                   : '50%',\n        left                  : '50%',\n        right                 : 'auto',\n        bottom                : 'auto',\n        marginRight           : '-50%',\n        transform             : 'translate(-50%, -50%)',\n    },\n};\nconst groupBan = async (userId, groupId, reason) => {\n    await fetch(\n        api.banUserById,\n        {\n            method: 'POST',\n            body: JSON.stringify({ userId, groupId, reason })\n        }\n    ).then((res) => {\n        console.log(res)\n        if (res && res.data && !res.data.ok) {\n            alert(\"problema ao deletar o usuario, contate o suporte!\");\n        } else {\n            alert(\"usuario deletado com sucesso!\");\n            window.location.reload();\n        }\n    });\n    console.log(userId, groupId);\n}\n\nconst BanUserModal = ({ isOpen, closeModal, data }) => {\n    const [ reason, setReason ] = React.useState(null);\n    const banMember = () => {\n        const userId = _.get(data, 'userId', '');\n        // TODO: make groupId available here\n        const groupId = _.get(data, 'groupId');\n        groupBan(userId, groupId, reason);\n        closeModal();\n    };\n\n    const onChange = event => {\n        event.persist();\n        setReason(event.target.value);\n    }\n\n    return (\n        <Modal\n            isOpen={isOpen}\n            onRequestClose={closeModal}\n            style={customStyles}\n            shouldCloseOnOverlayClick\n        >\n            <h2>{`Descreva para o usuario o motivo do banimento`}</h2>\n            <div className=\"control reason\">\n                <textarea onChange={onChange} className=\"textarea\"></textarea>\n            </div>\n            <div className=\"action-buttons\">\n                <button onClick={banMember} className=\"button is-primary\">Confirmar</button>\n                <button onClick={closeModal} className=\"button is-secondary\">Cancelar</button>\n            </div>\n        </Modal>\n    );\n}\n\nexport default BanUserModal;","import React from 'react';\nimport Collapsible from 'react-collapsible';\nimport BanUserModal from './BanUserModal';\nimport {\n    MdArrowDownward,\n    MdArrowUpward,\n    MdRemoveCircle\n} from 'react-icons/md';\nimport Loader from './Loader';\nimport _ from 'lodash';\nimport { api } from '../config.json';\n\nconst Management = props => {\n    const [ isOpen, setOpen ] = React.useState(false);\n    const [ data, setData ] = React.useState(null);\n    const [ groups, setGroups ] = React.useState(null);\n    \n    const closeModal = () => {\n        setOpen(false);\n        setData(null);\n    };\n    \n    const onDelete = (userId, groupId) => {\n        setOpen(true);\n        setData({ userId, groupId });\n    };\n\n    React.useEffect(() => {\n        async function fetchData() {\n            const res = await fetch(api.getAllUsers).then(res => res.json());\n            setGroups(_.groupBy(res.users, 'group_id'));\n        }\n        \n        fetchData();\n    }, [setGroups]);\n\n    if (!groups) return <Loader />;\n\n    return (\n        <React.Fragment>\n            <BanUserModal\n                isOpen={isOpen}\n                data={data}\n                closeModal={closeModal}\n            />\n            {_.map(groups, (users, key) => {\n                return (\n                    <React.Fragment key={key}>\n                        <CollapsibleTable\n                            users={users}\n                            groupId={key}\n                            onDelete={onDelete}\n                        />\n                    </React.Fragment>\n                );\n            })}\n        </React.Fragment>\n    );\n}\n\nconst Trigger = (productName) => (opened) => (\n    <span className=\"trigger-container\">\n        {productName}\n        {opened ? <MdArrowUpward /> : <MdArrowDownward />}\n    </span>\n);\n\nconst CollapsibleTable = ({\n    groupId,\n    users,\n    onDelete\n}) => {\n    const productName = groupId === '-1001241265705' ? 'COMUNIDADE TOPMAC DE SINAIS E ACOMPANHAMENTOS' : 'Grupo de teste';\n    const classname = \"container has-background-info has-text-white\";\n    return (\n        <Collapsible\n            className={classname}\n            openedClassName={classname}\n            contentOuterClassName={\"has-background-white\"}\n            trigger={Trigger(productName)(false)}\n            triggerWhenOpen={Trigger(productName)(true)}\n            key={groupId}>\n            <GroupTable users={users} id={groupId} onDelete={onDelete} />\n        </Collapsible>\n    )\n};\n\nconst GroupTable = ({ users, id, onDelete }) => {\n    return (\n        <div className=\"container\">\n            <table className=\"table group-table\">\n                <thead>\n                    <tr>\n                        <th>usuário</th>\n                        <th>nome</th>\n                        <th>telefone</th>\n                        <th>estado</th>\n                        <th>ações</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {users.filter(user => !user.removed).map(({ phone_number, active, user_id, user }) => {\n                        return (\n                            <tr key={phone_number}>\n                                <td>@{user.username}</td>\n                                <td>{user.first_name}</td>\n                                <td>{phone_number}</td>\n                                <td><span className={`tag ${active ? 'is-success' : 'is-danger'}`}>{active ? 'ativo' : 'inativo'}</span></td>\n                                <td>\n                                    <MdRemoveCircle\n                                        className=\"icon\"\n                                        onClick={() => onDelete(user_id, id)} />\n                                </td>\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default Management;\n","import React from \"react\";\nimport EditMessages from './EditMessages';\nimport Management from './Management';\n\nconst MESSAGES = 'mensagens';\nconst MANAGEMENT = 'gerenciamento';\n\nconst TABS = {\n  [MANAGEMENT]: props => <Management />,\n  [MESSAGES]: props => <EditMessages {...props} />,\n};\n\nconst Tab = ({ active, setTab, tabName }) => (\n  <li className={tabName === active ? \"is-active\" : \"\"} key={tabName}>\n    <a onClick={() => setTab(tabName)}>{tabName.toUpperCase()}</a>\n  </li>\n);\n\nconst TabsList = (props) => {\n  const [ activeTab, setTab ] = React.useState(MANAGEMENT);\n  const [ shouldWarn, setShouldWarn ] = React.useState(false);\n  const CurrentTab = TABS[activeTab];\n  const onTabChange = (tab) => {\n    let shouldChange = true;\n    if (shouldWarn) {\n      shouldChange = window.confirm('há alterações não salvas que serão perdidas. tem certeza que deseja mudar de aba?')\n    }\n\n    if (shouldChange) {\n      setTab(tab);\n      setShouldWarn(false);\n    }\n  }\n\n  return (\n    <div className=\"tablist\">\n      <div className=\"tabs is-centered\">\n        <ul>\n          {Object.keys(TABS).map((tab) => (\n            <Tab key={tab} active={activeTab} setTab={onTabChange} tabName={tab} />\n          ))}\n        </ul>\n      </div>\n      <div className=\"container\">\n        <CurrentTab\n          shouldWarn={shouldWarn}\n          setShouldWarn={setShouldWarn}\n          setTab={setTab}\n        />\n      </div>\n    </div>\n\n  );\n};\n\nexport default TabsList;","import React from 'react';\nimport config from '../config.json';\n\nconst Header = (props) => {\n    return (\n        <section className=\"hero is-info bg-blue\">\n            <div className=\"hero-body\">\n                <div className=\"container\">\n                <h1 className=\"title\">\n                    {config.company || \"company\"}\n                </h1>\n                <h2 className=\"subtitle\">\n                    {config.title || \"title\"}\n                </h2>\n                </div>\n            </div>\n        </section>\n    )\n};\n\nexport default Header;","import React from 'react';\nimport './App.css';\nimport 'bulma/css/bulma.min.css';\nimport TabsList from './components/TabList';\nimport Header from './components/Header';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <TabsList />      \n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}